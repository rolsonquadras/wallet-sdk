// Objective-C API for talking to github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/did Go package.
//   gobind -lang=objc github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/did
//
// File is generated by gobind. Do not edit.

#ifndef __Did_H__
#define __Did_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Api.objc.h"
#include "Walleterror.objc.h"

@class DidCreator;
@class DidResolver;
@class DidValidationResult;

/**
 * Creator is used for creating DID Documents using supported DID methods.
 */
@interface DidCreator : NSObject <goSeqRefInterface, ApiDIDCreator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewCreatorWithKeyReader returns a new DID document Creator. A Creator created with this function can be used to
create DID documents using your own already-generated keys from the given KeyReader.
At least one of keyHandleCreator and keyReader must be provided. See the Create method for more information.
 */
- (nullable instancetype)initWithKeyReader:(id<ApiKeyReader> _Nullable)keyReader;
/**
 * NewCreatorWithKeyWriter returns a new DID document Creator. A Creator created with this function will automatically
generate keys for you when creating new DID documents. Those keys will be generated and stored using the given
KeyWriter. See the Create method for more information.
 */
- (nullable instancetype)initWithKeyWriter:(id<ApiKeyWriter> _Nullable)keyWriter;
/**
 * Create creates a DID document using the given DID method.
The usage of createDIDOpts depends on the DID method you're using.

For creating did:key documents, there are two relevant options that can be set in the createDIDOpts object: KeyID and
VerificationType.

	If the Creator was created using the NewCreatorWithKeyWriter function, then both of those options are ignored.
	The createDIDOpts object can be set to nil in this case.
	An ED25519 key will be generated and saved automatically, and the verification type will automatically be set to
	Ed25519VerificationKey2018. TODO (#51): Support more key types. ED25519 is the chosen default for now.
	If the Creator was created using the NewCreatorWithKeyReader function, then you must specify the KeyID and also
	the VerificationType in the createDIDOpts object to use for the creation of the DID document.
 */
- (ApiDIDDocResolution* _Nullable)create:(NSString* _Nullable)method createDIDOpts:(ApiCreateDIDOpts* _Nullable)createDIDOpts error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Resolver supports DID resolution.
 */
@interface DidResolver : NSObject <goSeqRefInterface, ApiDIDResolver> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewResolver returns a new Resolver.
 */
- (nullable instancetype)init:(NSString* _Nullable)resolverServerURI;
/**
 * Resolve resolves a DID.
 */
- (NSData* _Nullable)resolve:(NSString* _Nullable)did error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * A ValidationResult is the type returned from the ValidateLinkedDomains method.
IsValid indicates if the given DID passed the service validation check, and ServiceURL indicates the URL of
that service.
 */
@interface DidValidationResult : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL isValid;
@property (nonatomic) NSString* _Nonnull serviceURL;
@end

/**
 * DIDMethodKey is the name recognized by the Create method for the did:key method.
 */
FOUNDATION_EXPORT NSString* _Nonnull const DidDIDMethodKey;
/**
 * Ed25519VerificationKey2018 is a supported DID verification type.
 */
FOUNDATION_EXPORT NSString* _Nonnull const DidEd25519VerificationKey2018;

/**
 * NewCreatorWithKeyReader returns a new DID document Creator. A Creator created with this function can be used to
create DID documents using your own already-generated keys from the given KeyReader.
At least one of keyHandleCreator and keyReader must be provided. See the Create method for more information.
 */
FOUNDATION_EXPORT DidCreator* _Nullable DidNewCreatorWithKeyReader(id<ApiKeyReader> _Nullable keyReader, NSError* _Nullable* _Nullable error);

/**
 * NewCreatorWithKeyWriter returns a new DID document Creator. A Creator created with this function will automatically
generate keys for you when creating new DID documents. Those keys will be generated and stored using the given
KeyWriter. See the Create method for more information.
 */
FOUNDATION_EXPORT DidCreator* _Nullable DidNewCreatorWithKeyWriter(id<ApiKeyWriter> _Nullable keyWriter, NSError* _Nullable* _Nullable error);

/**
 * NewResolver returns a new Resolver.
 */
FOUNDATION_EXPORT DidResolver* _Nullable DidNewResolver(NSString* _Nullable resolverServerURI, NSError* _Nullable* _Nullable error);

/**
 * ValidateLinkedDomains validates the given DID's Linked Domains service against its well-known DID configuration.
It returns a ValidationResult.
The DID document must specify only a single service. If there are multiple URLs for a given service, only the
first will be checked.
 */
FOUNDATION_EXPORT DidValidationResult* _Nullable DidValidateLinkedDomains(NSString* _Nullable did, id<ApiDIDResolver> _Nullable resolver, NSError* _Nullable* _Nullable error);

#endif
