// Objective-C API for talking to github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/api Go package.
//   gobind -lang=objc github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/api
//
// File is generated by gobind. Do not edit.

#ifndef __Api_H__
#define __Api_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class ApiActivity;
@class ApiCreateDIDOpts;
@class ApiDIDDocResolution;
@class ApiJSONArray;
@class ApiJSONObject;
@class ApiKeyHandle;
@class ApiKeyValuePair;
@class ApiKeyValuePairs;
@class ApiLDDocument;
@class ApiParams;
@class ApiStringArray;
@class ApiVerifiableCredential;
@class ApiVerifiableCredentialsArray;
@class ApiVerificationMethod;
@protocol ApiActivityLogger;
@class ApiActivityLogger;
@protocol ApiCredentialReader;
@class ApiCredentialReader;
@protocol ApiCredentialWriter;
@class ApiCredentialWriter;
@protocol ApiCrypto;
@class ApiCrypto;
@protocol ApiDIDCreator;
@class ApiDIDCreator;
@protocol ApiDIDJWTSignerCreator;
@class ApiDIDJWTSignerCreator;
@protocol ApiDIDResolver;
@class ApiDIDResolver;
@protocol ApiKeyReader;
@class ApiKeyReader;
@protocol ApiKeyWriter;
@class ApiKeyWriter;
@protocol ApiLDDocumentLoader;
@class ApiLDDocumentLoader;
@protocol ApiSigner;
@class ApiSigner;

@protocol ApiActivityLogger <NSObject>
/**
 * Log logs a single activity.
 */
- (BOOL)log:(ApiActivity* _Nullable)activity error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiCredentialReader <NSObject>
/**
 * Get retrieves a VC.
 */
- (ApiVerifiableCredential* _Nullable)get:(NSString* _Nullable)id_ error:(NSError* _Nullable* _Nullable)error;
/**
 * GetAll retrieves all VCs.
 */
- (ApiVerifiableCredentialsArray* _Nullable)getAll:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiCredentialWriter <NSObject>
/**
 * Add adds a VC.
 */
- (BOOL)add:(ApiVerifiableCredential* _Nullable)vc error:(NSError* _Nullable* _Nullable)error;
/**
 * Remove removes a VC.
 */
- (BOOL)remove:(NSString* _Nullable)id_ error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiCrypto <NSObject>
/**
 * Sign will sign msg using a matching signature primitive from key referenced by keyID
returns:
		signature as []byte
		error in case of errors
 */
- (NSData* _Nullable)sign:(NSData* _Nullable)msg keyID:(NSString* _Nullable)keyID error:(NSError* _Nullable* _Nullable)error;
/**
 * Verify will verify a signature for the given msg using a matching signature primitive from key referenced by keyID
returns:
		error in case of errors or nil if signature verification was successful
 */
- (BOOL)verify:(NSData* _Nullable)signature msg:(NSData* _Nullable)msg keyID:(NSString* _Nullable)keyID error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiDIDCreator <NSObject>
/**
 * Create creates a new DID Document using the given method.
 */
- (ApiDIDDocResolution* _Nullable)create:(NSString* _Nullable)method createDIDOpts:(ApiCreateDIDOpts* _Nullable)createDIDOpts error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiDIDJWTSignerCreator <NSObject>
/**
 * Create returns a corresponding Signer type for the given DID doc verificationMethod object.
 */
- (id<ApiSigner> _Nullable)create:(ApiJSONObject* _Nullable)verificationMethod error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiDIDResolver <NSObject>
/**
 * Resolve resolves a DID. It returns a DID document marshalled as JSON.
 */
- (NSData* _Nullable)resolve:(NSString* _Nullable)did error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiKeyReader <NSObject>
/**
 * ExportPubKey returns the public key associated with the given keyID as raw bytes.
 */
- (NSData* _Nullable)exportPubKey:(NSString* _Nullable)keyID error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiKeyWriter <NSObject>
/**
 * Create creates a keyset of the given keyType and then writes it to storage.
The keyID and raw public key bytes of the newly generated keyset are returned via the KeyHandle object.
 */
- (ApiKeyHandle* _Nullable)create:(NSString* _Nullable)keyType error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiLDDocumentLoader <NSObject>
- (ApiLDDocument* _Nullable)loadDocument:(NSString* _Nullable)u error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ApiSigner <NSObject>
- (NSData* _Nullable)sign:(NSData* _Nullable)msg error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * An Activity represents a single activity.
 */
@interface ApiActivity : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Activity.GoAPIActivity with unsupported type: *github.com/trustbloc/wallet-sdk/pkg/api.Activity

/**
 * Client returns information about with whom this activity was with. For example: the issuer name, verifier name, etc.
 */
- (NSString* _Nonnull)client;
/**
 * ID returns this activity's ID.
 */
- (NSString* _Nonnull)id_;
/**
 * Operation returns what operation was performed. For example: oidc-issuance, oidc-presentation, etc.
 */
- (NSString* _Nonnull)operation;
/**
 * Params returns any additional parameters contained within the activity.
 */
- (ApiParams* _Nullable)params;
/**
 * Serialize serializes this Activity object into JSON.
 */
- (NSString* _Nonnull)serialize:(NSError* _Nullable* _Nullable)error;
/**
 * Status returns the status of the operation that was performed. For example: success, failure, etc.
 */
- (NSString* _Nonnull)status;
/**
 * Type returns this activity's type.
 */
- (NSString* _Nonnull)type;
/**
 * UnixTimestamp returns the time this activity happened as a Unix timestamp.
 */
- (int64_t)unixTimestamp;
@end

/**
 * CreateDIDOpts represents the various options for the DIDCreator.Create method.
 */
@interface ApiCreateDIDOpts : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull keyID;
@property (nonatomic) NSString* _Nonnull verificationType;
@property (nonatomic) NSString* _Nonnull keyType;
@end

/**
 * DIDDocResolution represents a DID document resolution object.
 */
@interface ApiDIDDocResolution : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewDIDDocResolution creates a new DIDDocResolution.
 */
- (nullable instancetype)init:(NSData* _Nullable)content;
/**
 * Content is the full marshalled DID doc resolution object.
 */
@property (nonatomic) NSData* _Nullable content;
/**
 * AssertionMethod returns did assertion verification method.
 */
- (ApiVerificationMethod* _Nullable)assertionMethod:(NSError* _Nullable* _Nullable)error;
/**
 * ID returns the ID of the DID document contained within this DIDDocResolution.
 */
- (NSString* _Nonnull)id_:(NSError* _Nullable* _Nullable)error;
@end

/**
 * JSONArray contains a JSON array.
It's a simple wrapper around the actual JSON string. Its purpose is to help the
caller using the mobile bindings to understand what type of data to expect or pass in.
 */
@interface ApiJSONArray : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable data;
@end

/**
 * JSONObject contains a single JSON object (not an array).
It's a simple wrapper around the actual JSON string. Its purpose is to help the
caller using the mobile bindings to understand what type of data to expect or pass in.
 */
@interface ApiJSONObject : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable data;
@end

/**
 * KeyHandle represents a public key with associated metadata.
 */
@interface ApiKeyHandle : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable pubKey;
@property (nonatomic) NSString* _Nonnull keyID;
@end

/**
 * KeyValuePair represents a single key-value pair.
 */
@interface ApiKeyValuePair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * Key returns this key-value pair's key.
 */
- (NSString* _Nonnull)key;
/**
 * ValueString returns this key-value pair's value.
If the value is not a string, then an error is returned.
 */
- (NSString* _Nonnull)valueString:(NSError* _Nullable* _Nullable)error;
/**
 * ValueStringArray returns this key-value pair's value.
If the value is not an array of strings, then an error is returned.
 */
- (ApiStringArray* _Nullable)valueStringArray:(NSError* _Nullable* _Nullable)error;
/**
 * ValueType returns the type of this key-value pair's value.
If value is a string, then "string" is returned.
If value is an array of strings, then "[]string" is returned.
No other types are (currently) supported - if the value is any other type then an error is returned.
 */
- (NSString* _Nonnull)valueType:(NSError* _Nullable* _Nullable)error;
@end

/**
 * KeyValuePairs represents a set of key-value pairs.
 */
@interface ApiKeyValuePairs : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * AtIndex returns the key-value pair at the given index.
If the index passed in is out of bounds, then nil is returned.
 */
- (ApiKeyValuePair* _Nullable)atIndex:(long)index;
/**
 * Length returns the number of key-value pairs contained within this KeyValuePairs object.
 */
- (long)length;
@end

/**
 * LDDocument is linked domains document.
 */
@interface ApiLDDocument : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull documentURL;
/**
 * bytes of json document.
 */
@property (nonatomic) NSData* _Nullable document;
@property (nonatomic) NSString* _Nonnull contextURL;
@end

/**
 * Params represents additional parameters which may be required for wallet applications in the future.
As such, this is currently a placeholder.
 */
@interface ApiParams : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * AllKeyValuePairs returns all params as key-value pairs.
 */
- (ApiKeyValuePairs* _Nullable)allKeyValuePairs;
/**
 * GetString returns the value stored under the given key.
If there is no param with that key, or if the param is not a string then an error is returned.
 */
- (NSString* _Nonnull)getString:(NSString* _Nullable)key error:(NSError* _Nullable* _Nullable)error;
/**
 * GetStringArray returns the value stored under the given key.
If there is no param with that key, or if the param is not an array of strings then an error is returned.
 */
- (ApiStringArray* _Nullable)getStringArray:(NSString* _Nullable)key error:(NSError* _Nullable* _Nullable)error;
/**
 * GetValueType returns the type of the value stored under the given key.
If there is no param with that key then an error is returned.
If value is a string, then "string" is returned.
If value is an array of strings, then "[]string" is returned.
No other types are (currently) supported - if the value is any other type then an error is returned.
 */
- (NSString* _Nonnull)getValueType:(NSString* _Nullable)key error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * StringArray represents an array of strings.
It wraps a standard Go array and provides gomobile-compatible methods that allow a caller to use this type
in an array-like manner.
 */
@interface ApiStringArray : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * AtIndex returns the string at the given index.
If the index passed in is out of bounds, then an empty string is returned.
 */
- (NSString* _Nonnull)atIndex:(long)index;
/**
 * Length returns the number of strings contained within this StringArray object.
 */
- (long)length;
@end

/**
 * VerifiableCredential represents a Verifiable Credential per the VC Data Model spec:
https://www.w3.org/TR/vc-data-model/.
It wraps the VC type from aries-framework-go and provides gomobile-compatible methods.
 */
@interface ApiVerifiableCredential : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
// skipped constructor VerifiableCredential.NewVerifiableCredential with unsupported parameter or return types

// skipped field VerifiableCredential.VC with unsupported type: *github.com/hyperledger/aries-framework-go/pkg/doc/verifiable.Credential

/**
 * IssuerID returns the ID of this VC's issuer.
While the ID is typically going to be a DID, the Verifiable Credential spec does not mandate this.
 */
- (NSString* _Nonnull)issuerID;
/**
 * Serialize returns a JSON representation of this VC.
 */
- (NSString* _Nonnull)serialize:(NSError* _Nullable* _Nullable)error;
@end

/**
 * VerifiableCredentialsArray represents an array of VerifiableCredentials.
Since arrays and slices are not compatible with gomobile, this type acts as a wrapper around a Go array of VCs.
 */
@interface ApiVerifiableCredentialsArray : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewVerifiableCredentialsArray creates new NewVerifiableCredentialsArray.
 */
- (nullable instancetype)init;
/**
 * Add adds new VC to underlying array.
 */
- (void)add:(ApiVerifiableCredential* _Nullable)cred;
/**
 * AtIndex returns element from underlying array by index.
 */
- (ApiVerifiableCredential* _Nullable)atIndex:(long)index;
/**
 * Length returns length of underlying array.
 */
- (long)length;
@end

/**
 * VerificationMethod represents a DID verification method.
 */
@interface ApiVerificationMethod : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewVerificationMethod creates VerificationMethod.
 */
- (nullable instancetype)init:(NSString* _Nullable)keyID vmType:(NSString* _Nullable)vmType;
@property (nonatomic) NSString* _Nonnull id_;
@property (nonatomic) NSString* _Nonnull type;
// skipped field VerificationMethod.Key with unsupported type: github.com/trustbloc/wallet-sdk/pkg/models.VerificationKey

// skipped method VerificationMethod.ToSDKVerificationMethod with unsupported parameter or return types

@end

/**
 * NewDIDDocResolution creates a new DIDDocResolution.
 */
FOUNDATION_EXPORT ApiDIDDocResolution* _Nullable ApiNewDIDDocResolution(NSData* _Nullable content);

// skipped function NewVerifiableCredential with unsupported parameter or return types


/**
 * NewVerifiableCredentialsArray creates new NewVerifiableCredentialsArray.
 */
FOUNDATION_EXPORT ApiVerifiableCredentialsArray* _Nullable ApiNewVerifiableCredentialsArray(void);

/**
 * NewVerificationMethod creates VerificationMethod.
 */
FOUNDATION_EXPORT ApiVerificationMethod* _Nullable ApiNewVerificationMethod(NSString* _Nullable keyID, NSString* _Nullable vmType);

/**
 * ParseActivity parses the given serialized activity and returns an Activity object.
 */
FOUNDATION_EXPORT ApiActivity* _Nullable ApiParseActivity(NSString* _Nullable activity, NSError* _Nullable* _Nullable error);

@class ApiActivityLogger;

@class ApiCredentialReader;

@class ApiCredentialWriter;

@class ApiCrypto;

@class ApiDIDCreator;

@class ApiDIDJWTSignerCreator;

@class ApiDIDResolver;

@class ApiKeyReader;

@class ApiKeyWriter;

@class ApiLDDocumentLoader;

@class ApiSigner;

/**
 * An ActivityLogger logs activities.
 */
@interface ApiActivityLogger : NSObject <goSeqRefInterface, ApiActivityLogger> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Log logs a single activity.
 */
- (BOOL)log:(ApiActivity* _Nullable)activity error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * A CredentialReader is capable of reading VCs from some underlying storage mechanism.
 */
@interface ApiCredentialReader : NSObject <goSeqRefInterface, ApiCredentialReader> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Get retrieves a VC.
 */
- (ApiVerifiableCredential* _Nullable)get:(NSString* _Nullable)id_ error:(NSError* _Nullable* _Nullable)error;
/**
 * GetAll retrieves all VCs.
 */
- (ApiVerifiableCredentialsArray* _Nullable)getAll:(NSError* _Nullable* _Nullable)error;
@end

/**
 * A CredentialWriter is capable of writing VCs to some underlying storage mechanism.
 */
@interface ApiCredentialWriter : NSObject <goSeqRefInterface, ApiCredentialWriter> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Add adds a VC.
 */
- (BOOL)add:(ApiVerifiableCredential* _Nullable)vc error:(NSError* _Nullable* _Nullable)error;
/**
 * Remove removes a VC.
 */
- (BOOL)remove:(NSString* _Nullable)id_ error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Crypto defines useful Crypto operations.
 */
@interface ApiCrypto : NSObject <goSeqRefInterface, ApiCrypto> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Sign will sign msg using a matching signature primitive from key referenced by keyID
returns:
		signature as []byte
		error in case of errors
 */
- (NSData* _Nullable)sign:(NSData* _Nullable)msg keyID:(NSString* _Nullable)keyID error:(NSError* _Nullable* _Nullable)error;
/**
 * Verify will verify a signature for the given msg using a matching signature primitive from key referenced by keyID
returns:
		error in case of errors or nil if signature verification was successful
 */
- (BOOL)verify:(NSData* _Nullable)signature msg:(NSData* _Nullable)msg keyID:(NSString* _Nullable)keyID error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * DIDCreator defines the method required for a type to create DID documents.
 */
@interface ApiDIDCreator : NSObject <goSeqRefInterface, ApiDIDCreator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Create creates a new DID Document using the given method.
 */
- (ApiDIDDocResolution* _Nullable)create:(NSString* _Nullable)method createDIDOpts:(ApiCreateDIDOpts* _Nullable)createDIDOpts error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * DIDJWTSignerCreator represents a type that can create a signer that signs with the private key
associated with the given verification method object (from a DID doc) in order to facilitate JWT signing.
This interface acts as a wrapper for a function with a signature of (verificationMethod *JSONObject) (Signer, error).
Gomobile doesn't allow a function to be used directly as a return parameter, so this interface wrapper allows us
to get around this limitation.
 */
@interface ApiDIDJWTSignerCreator : NSObject <goSeqRefInterface, ApiDIDJWTSignerCreator> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Create returns a corresponding Signer type for the given DID doc verificationMethod object.
 */
- (id<ApiSigner> _Nullable)create:(ApiJSONObject* _Nullable)verificationMethod error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * DIDResolver defines the method required for a type to resolve DIDs.
 */
@interface ApiDIDResolver : NSObject <goSeqRefInterface, ApiDIDResolver> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Resolve resolves a DID. It returns a DID document marshalled as JSON.
 */
- (NSData* _Nullable)resolve:(NSString* _Nullable)did error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * KeyReader represents a type that is capable of performing operations related to reading keys from an underlying KMS.
 */
@interface ApiKeyReader : NSObject <goSeqRefInterface, ApiKeyReader> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * ExportPubKey returns the public key associated with the given keyID as raw bytes.
 */
- (NSData* _Nullable)exportPubKey:(NSString* _Nullable)keyID error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * KeyWriter represents a type that is capable of performing operations related to key creation and storage within
an underlying KMS.
 */
@interface ApiKeyWriter : NSObject <goSeqRefInterface, ApiKeyWriter> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * Create creates a keyset of the given keyType and then writes it to storage.
The keyID and raw public key bytes of the newly generated keyset are returned via the KeyHandle object.
 */
- (ApiKeyHandle* _Nullable)create:(NSString* _Nullable)keyType error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * LDDocumentLoader is capable of loading linked domains documents.
 */
@interface ApiLDDocumentLoader : NSObject <goSeqRefInterface, ApiLDDocumentLoader> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (ApiLDDocument* _Nullable)loadDocument:(NSString* _Nullable)u error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * A Signer is capable of signing data.
 */
@interface ApiSigner : NSObject <goSeqRefInterface, ApiSigner> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSData* _Nullable)sign:(NSData* _Nullable)msg error:(NSError* _Nullable* _Nullable)error;
@end

#endif
