// Objective-C API for talking to github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/credential Go package.
//   gobind -lang=objc github.com/trustbloc/wallet-sdk/cmd/wallet-sdk-gomobile/credential
//
// File is generated by gobind. Do not edit.

#ifndef __Credential_H__
#define __Credential_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Api.objc.h"
#include "Walleterror.objc.h"

@class CredentialCredentialsOpt;
@class CredentialDB;
@class CredentialInquirer;
@class CredentialSigner;
@class CredentialVerifiablePresentation;

/**
 * CredentialsOpt represents the different ways that credentials can be passed in to the Query method.
At most one out of VCs and CredentialReader should be used for a given call to Resolve. If both are specified,
then VCs will take precedence.
 */
@interface CredentialCredentialsOpt : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewCredentialsOpt creates CredentialsOpt from VCs.
 */
- (nullable instancetype)init:(ApiVerifiableCredentialsArray* _Nullable)vcArr;
/**
 * NewCredentialsOptFromReader creates CredentialsOpt from CredentialReader.
 */
- (nullable instancetype)initFromReader:(id<ApiCredentialReader> _Nullable)credentialReader;
/**
 * VCs is an array of Verifiable CredentialsOpt. If specified, this takes precedence over the CredentialReader
used in the constructor (NewResolver).
 */
@property (nonatomic) ApiVerifiableCredentialsArray* _Nullable vCs;
/**
 * CredentialReader allows for access to a VC storage mechanism.
 */
@property (nonatomic) id<ApiCredentialReader> _Nullable credentialReader;
@end

/**
 * A DB allows for credential storage and retrieval using in-memory storage only.
 */
@interface CredentialDB : NSObject <goSeqRefInterface, ApiCredentialReader, ApiCredentialWriter> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * Add stores the given credential.
 */
- (BOOL)add:(ApiVerifiableCredential* _Nullable)vc error:(NSError* _Nullable* _Nullable)error;
/**
 * Get returns a credential with the given id. An error is returned if no credential exists with the given id.
 */
- (ApiVerifiableCredential* _Nullable)get:(NSString* _Nullable)id_ error:(NSError* _Nullable* _Nullable)error;
/**
 * GetAll returns all stored credentials.
 */
- (ApiVerifiableCredentialsArray* _Nullable)getAll:(NSError* _Nullable* _Nullable)error;
/**
 * Remove removes the credential with the matching id, if it exists.
 */
- (BOOL)remove:(NSString* _Nullable)id_ error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Inquirer implements querying credentials using presentation definition.
 */
@interface CredentialInquirer : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewInquirer returns a new Inquirer.
 */
- (nullable instancetype)init:(id<ApiLDDocumentLoader> _Nullable)documentLoader;
/**
 * Query returns credentials that match PresentationDefinition.
 */
- (CredentialVerifiablePresentation* _Nullable)query:(NSData* _Nullable)query contents:(CredentialCredentialsOpt* _Nullable)contents error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * Signer issues self-signed credentials.
 */
@interface CredentialSigner : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewSigner initializes a credential Signer for issuing self-signed credentials.
 */
- (nullable instancetype)init:(id<ApiCredentialReader> _Nullable)credReader didResolver:(id<ApiDIDResolver> _Nullable)didResolver crypto:(id<ApiCrypto> _Nullable)crypto ldLoader:(id<ApiLDDocumentLoader> _Nullable)ldLoader;
/**
 * Issue signs the given Verifiable Credential with the key identified by keyID, returning a serialized JWT VC.
The Verifiable Credential can either be provided directly or it can be specified by credID, in which case it will be
retrieved from this Signer's CredentialReader.
 */
- (NSData* _Nullable)issue:(ApiVerifiableCredential* _Nullable)credential credID:(NSString* _Nullable)credID keyID:(NSString* _Nullable)keyID error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * VerifiablePresentation typed wrapper around go implementation of verifiable presentation.
 */
@interface CredentialVerifiablePresentation : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * Content return marshaled representation of verifiable presentation.
 */
- (NSData* _Nullable)content:(NSError* _Nullable* _Nullable)error;
/**
 * Credentials returns marshaled representation of credentials from this verifiable presentation.
 */
- (ApiVerifiableCredentialsArray* _Nullable)credentials:(NSError* _Nullable* _Nullable)error;
@end

/**
 * NewCredentialsOpt creates CredentialsOpt from VCs.
 */
FOUNDATION_EXPORT CredentialCredentialsOpt* _Nullable CredentialNewCredentialsOpt(ApiVerifiableCredentialsArray* _Nullable vcArr);

/**
 * NewCredentialsOptFromReader creates CredentialsOpt from CredentialReader.
 */
FOUNDATION_EXPORT CredentialCredentialsOpt* _Nullable CredentialNewCredentialsOptFromReader(id<ApiCredentialReader> _Nullable credentialReader);

/**
 * NewInMemoryDB returns a new in-memory credential DB.
It uses a network-based JSON-LD document loader.
TODO: https://github.com/trustbloc/wallet-sdk/issues/160 Support custom document
loaders so that contexts can be preloaded.
 */
FOUNDATION_EXPORT CredentialDB* _Nullable CredentialNewInMemoryDB(void);

/**
 * NewInquirer returns a new Inquirer.
 */
FOUNDATION_EXPORT CredentialInquirer* _Nullable CredentialNewInquirer(id<ApiLDDocumentLoader> _Nullable documentLoader);

/**
 * NewSigner initializes a credential Signer for issuing self-signed credentials.
 */
FOUNDATION_EXPORT CredentialSigner* _Nullable CredentialNewSigner(id<ApiCredentialReader> _Nullable credReader, id<ApiDIDResolver> _Nullable didResolver, id<ApiCrypto> _Nullable crypto, id<ApiLDDocumentLoader> _Nullable ldLoader, NSError* _Nullable* _Nullable error);

#endif
